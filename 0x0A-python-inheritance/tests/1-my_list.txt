Testing for module docstring:
	>>> l = __import__("01-my_list").__doc__
	>>> len(l) > 1
	True

Testing for class doctsring:
	>>> c = __import__("1-my_list").MyList.__doc__
	>>> len(c) > 1
	True

Testing for method docstring:
	>>> m = __import__("1-my_list").MyList.print_sorted.__doc__
	>>> len(m) > 1
	True

Testing for inheritance relationship:
	>>> issubclass(MyList, list)
	True

Test for empty list:
     	 >>> l = MyList()
	 >>> l.print_sorted()
	 []

Test for list append method works:
     	 >>> l.append(1)
	 >>> l.append(3)
	 >>> l.append(2)
	 [1, 3, 2]


Test for sorting:
     	 >>> l = MyList()
	 >>> l.append(6)
	 >>> l.append(4)
	 >>> l.append(9)
	 >>> l.append(2);
	 >>> print(l)
	 [6, 4, 9, 2]
	 l.print_sorted()
	 [2, 4, 6, 9]

Test for sorting negative numbers
     	 >>> l.append(-3)
	 >>> l.append(0)
	 >>> l.append(-1)
	 l.print_sorted()
	 [-3, -1, 0, 2, 4, 6, 9]

Test for too many arguments:
	 >>> l.print_sorted(1)
         Traceback (most recent call last):
	 ...
	 TypeError: print_sorted() takes 1 positional argument but 2 were given
	
